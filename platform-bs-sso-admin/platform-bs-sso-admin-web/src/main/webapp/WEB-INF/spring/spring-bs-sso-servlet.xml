<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- Scans the classpath of this application for @Components to deploy as 
		beans -->
	<import resource="classpath:META-INF/spring-bs-sso-web.xml"/>

	<!-- 扫描本工程下的bean -->
	<context:component-scan base-package="com.wonhigh.bs.sso.admin" />

	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->

	<!-- Enables the Spring MVC @Controller programming model validator="validator" -->
	<mvc:annotation-driven />

	<!-- 视图解析器，根据视图的名称new ModelAndView(name)，在配置文件查找对应的bean配置 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>

	<!-- <bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="2" />
		用于开启 /userinfo/123?format=json 的支持 默认是true
		<property name="favorParameter" value="true" />
		用于关闭 /userinfo/123.json 的支持 默认是true
		<property name="favorPathExtension" value="false" />
		设置为true以忽略对Accept Header的支持
		<property name="ignoreAcceptHeader" value="true" />

		在没有扩展名时即: "/user/1" 时的默认展现形式
		<property name="defaultContentType" value="text/html" />

		扩展名至mimeType的映射,即 /user.json => application/json
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="jsonp" value="application/javascript" />
			</map>
		</property>
	</bean> -->

	<!-- 设置freeMarker的配置文件路径 -->
	<bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:freemarker.properties" />
	</bean>

	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerSettings" ref="freemarkerConfiguration" />
		<property name="templateLoaderPath">
			<value>/</value>
		</property>
		<!-- <property name="freemarkerSettings"> 
			<props> 
			<prop key="defaultEncoding">UTF-8</prop> 
			<prop key="url_escaping_charset">UTF-8</prop> 
			<prop key="datetime_format">yyyy-MM-dd</prop> 
			<prop key="number_format">0.######</prop> 
			<prop key="template_update_delay">0</prop> 
			</props> 
		</property> -->
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
				<entry key="commonDomainStatic" value="${common.static.url}"></entry>
				<entry key="domainStatic" value="${static.url}"></entry>
				<entry key="staticVersion" value="${static.version}" />
			</map>
		</property>
	</bean>

	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<!-- use default setting now -->
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="order" value="3" />
		<property name="prefix" value="WEB-INF/ftl/pages/" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="attributesMap">
			<map>
				<!-- // 定义Freemarker方法的名称 
				<entry key="checkPower">
					 关联到我们之前定义的工具类 
					<bean class="com.yougou.logistics.uc.web.utils.EncodeURLMethod" />
				</entry> -->
				<!-- 定义Freemarker方法的名称 -->
			    <entry key="pid">
			     	<bean class="com.wonhigh.bs.sso.admin.freemark.ProductId" />
			    </entry>
			</map>
		</property>
	</bean>

	<!-- 解决JSON中文乱码问题 -->  
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<util:list id="beanList">
				<!-- <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
		            <property name="supportedMediaTypes">  
		                <list>  
		                    <value>text/plain;charset=UTF-8</value>  
		                    <value>text/html;charset=UTF-8</value>  
		                    <value>application/json;charset=UTF-8</value>  
		                </list>  
		            </property>  
		        </bean>  -->
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>  
		                    <value>text/html;charset=UTF-8</value> 
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
					<property name="objectMapper">  
                  	<!-- jackson-databind-2.8.9.jar -->  
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">  
                        <property name="dateFormat">    
                            <bean class="java.text.SimpleDateFormat">    
                               <constructor-arg value="yyyy-MM-dd HH:mm:ss" />    
                            </bean>    
                        </property>    
                    </bean>  
                    </property>  
				</bean>
			</util:list>
		</property>
	</bean>

	<!-- <bean name="jsonView"
		class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
		<property name="encoding">
			<value type="org.codehaus.jackson.JsonEncoding">UTF8</value>
		</property>
		<property name="extractValueFromSingleKeyModel" value="true"></property>
		<property name="contentType" value="application/json;charset=UTF-8" />
	</bean> -->
	<!-- <bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" /> -->
	<!-- <bean id="annotationMethodHandlerAdapter"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							 <value>application/json;charset=UTF-8</value>
							<value>text/html;charset=UTF-8</value>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean> -->
	<!-- Enables the Spring MVC @Controller programming model validator="validator" -->
    <mvc:annotation-driven validator="validator">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
            	<constructor-arg value="UTF-8"></constructor-arg>
            	<!-- 支持客户端请求的类型，以下列列表中第一个优先输出 -->
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
						<value>text/plain;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <!-- <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
            	支持客户端请求的类型
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
						<value>text/plain;charset=UTF-8</value>
                    </list>
                </property>
                <property name="objectMapper">
	                <bean class="org.codehaus.jackson.map.ObjectMapper">
	                    <property name="dateFormat">
	                        <bean class="java.text.SimpleDateFormat">
	                            <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
	                        </bean>
	                    </property>
	                    时区指定
							<property name="timeZone" value="GMT+8" />
	                </bean>
            </property>
            </bean> -->
        </mvc:message-converters>
    </mvc:annotation-driven>
	<!-- 需确认restTemplate的配置是否可被删除 -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
	     				<constructor-arg value="UTF-8"></constructor-arg>
	     		</bean>
	     		<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<!-- <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" /> -->
			</list>
		</property>
	</bean>
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
	             <value>application/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">  
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>  
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->  
        <property name="validationMessageSource" ref="messageSource"/>  
    </bean>
    <!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->  
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
        <property name="basenames">  
            <list>  
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->  
                <value>classpath:messages</value>  
                <value>classpath:org/hibernate/validator/ValidationMessages</value>  
            </list>  
        </property>  
        <property name="useCodeAsDefaultMessage" value="false"/>  
        <property name="defaultEncoding" value="UTF-8"/>  
        <property name="cacheSeconds" value="60"/>  
    </bean>
	<!-- 登录 认证 -->
	<mvc:interceptors>
		<!-- <mvc:interceptor>
			<mvc:mapping path="/api/**"/>
			<bean id="apiVerifyInterceptor" class="com.wonhigh.bs.sso.interceptor.ApiVerifyInterceptor">
				<property name="apiManager" ref="smsApiManager"></property>
			</bean>
		</mvc:interceptor> -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="sessionCheckInterceptor" class="com.wonhigh.bs.sso.admin.interceptor.SessionCheckInterceptor">
				<property name="sessionKey" value="session_user"/>
				<property name="redirectUrl" value="/home"/>
				<property name="indexUrl" value="/index"/>
				<property name="excludeUrl">
					<list>
						<value>/login</value>
						<value>/home</value>
						<value>/loginOut</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>
